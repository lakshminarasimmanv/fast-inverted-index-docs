"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6886],{5810:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"enterprise-search-testing","title":"Enterprise Search Testing","description":"This document summarizes comprehensive testing of the Fast Inverted Index library with enterprise-like search data.","source":"@site/docs/enterprise_search_testing.md","sourceDirName":".","slug":"/enterprise-search-testing","permalink":"/docs/enterprise-search-testing","draft":false,"unlisted":false,"editUrl":"https://github.com/username/fast-inverted-index/tree/main/docusaurus/docs/enterprise_search_testing.md","tags":[],"version":"current","frontMatter":{"id":"enterprise-search-testing","title":"Enterprise Search Testing","sidebar_label":"Enterprise Search Testing"},"sidebar":"docs","previous":{"title":"Python Type Conversion","permalink":"/docs/python-type-conversion"},"next":{"title":"ouservauility","permalink":"/docs/observability"}}');var s=i(4848),t=i(8453);const l={id:"enterprise-search-testing",title:"Enterprise Search Testing",sidebar_label:"Enterprise Search Testing"},a="Enterprise Search Testing",d={},c=[{value:"Overview",id:"overview",level:2},{value:"Test Data",id:"test-data",level:2},{value:"Test Cases",id:"test-cases",level:2},{value:"1. Basic Search",id:"1-basic-search",level:3},{value:"2. Boolean Search",id:"2-boolean-search",level:3},{value:"3. Metadata Retrieval",id:"3-metadata-retrieval",level:3},{value:"4. QueryBuilder API",id:"4-querybuilder-api",level:3},{value:"5. Field Boosting",id:"5-field-boosting",level:3},{value:"6. Faceted Search",id:"6-faceted-search",level:3},{value:"7. Result Limiting",id:"7-result-limiting",level:3},{value:"8. Complex Queries",id:"8-complex-queries",level:3},{value:"9. Batch Operations",id:"9-batch-operations",level:3},{value:"10. Tag Field Handling",id:"10-tag-field-handling",level:3},{value:"Findings",id:"findings",level:2},{value:"Sample Code",id:"sample-code",level:2},{value:"Conclusion",id:"conclusion",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"enterprise-search-testing",children:"Enterprise Search Testing"})}),"\n",(0,s.jsx)(n.p,{children:"This document summarizes comprehensive testing of the Fast Inverted Index library with enterprise-like search data."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"We created a suite of tests that validate the library's functionality in an enterprise search context with:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Rich document metadata"}),"\n",(0,s.jsx)(n.li,{children:"Complex document structures"}),"\n",(0,s.jsx)(n.li,{children:"Various query types"}),"\n",(0,s.jsx)(n.li,{children:"Metadata preservation"}),"\n",(0,s.jsx)(n.li,{children:"Batch operations"}),"\n",(0,s.jsx)(n.li,{children:"Field boosting"}),"\n",(0,s.jsx)(n.li,{children:"Faceted search"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"test-data",children:"Test Data"}),"\n",(0,s.jsx)(n.p,{children:"The test creates 10 enterprise-style documents with these metadata fields:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"title"}),": Document title (boosted field)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"content"}),": Main document text"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tags"}),": List of keyword tags"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"author"}),": Document author"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"department"}),": Organizational department"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"date_created"}),": Creation date"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"priority"}),": Priority level (high, medium, low)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"status"}),": Document status"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"views"}),": View count"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"location"}),": Physical location"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example documents include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Financial reports"}),"\n",(0,s.jsx)(n.li,{children:"Marketing strategies"}),"\n",(0,s.jsx)(n.li,{children:"Product roadmaps"}),"\n",(0,s.jsx)(n.li,{children:"HR policies"}),"\n",(0,s.jsx)(n.li,{children:"Security incident reports"}),"\n",(0,s.jsx)(n.li,{children:"Sales analyses"}),"\n",(0,s.jsx)(n.li,{children:"AI strategy frameworks"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"test-cases",children:"Test Cases"}),"\n",(0,s.jsx)(n.p,{children:"The test suite validates:"}),"\n",(0,s.jsx)(n.h3,{id:"1-basic-search",children:"1. Basic Search"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Simple term searches returning relevant documents"}),"\n",(0,s.jsx)(n.li,{children:"Ranking and relevance of results"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-boolean-search",children:"2. Boolean Search"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"AND queries finding documents with all terms"}),"\n",(0,s.jsx)(n.li,{children:"OR queries finding documents with any term"}),"\n",(0,s.jsx)(n.li,{children:"Mixed queries with proper operator precedence"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-metadata-retrieval",children:"3. Metadata Retrieval"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Consistent retrieval of document metadata"}),"\n",(0,s.jsx)(n.li,{children:"Handling of list fields (tags)"}),"\n",(0,s.jsx)(n.li,{children:"Metadata preservation through indexing"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"4-querybuilder-api",children:"4. QueryBuilder API"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Building AND/OR queries programmatically"}),"\n",(0,s.jsx)(n.li,{children:"Adding multiple terms"}),"\n",(0,s.jsx)(n.li,{children:"Clearing and reusing query builders"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"5-field-boosting",children:"5. Field Boosting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Result ranking with boosted fields"}),"\n",(0,s.jsx)(n.li,{children:"Relevance scores reflecting field importance"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"6-faceted-search",children:"6. Faceted Search"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Filtering by metadata fields"}),"\n",(0,s.jsx)(n.li,{children:"Grouping documents by properties"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"7-result-limiting",children:"7. Result Limiting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Proper truncation of result sets"}),"\n",(0,s.jsx)(n.li,{children:"Performance with limited results"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"8-complex-queries",children:"8. Complex Queries"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Mixed metadata and content searches"}),"\n",(0,s.jsx)(n.li,{children:"Multi-term, multi-field queries"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"9-batch-operations",children:"9. Batch Operations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Adding multiple documents with fields"}),"\n",(0,s.jsx)(n.li,{children:"Metadata preservation in batch mode"}),"\n",(0,s.jsx)(n.li,{children:"Mixed field types in batch operations"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"10-tag-field-handling",children:"10. Tag Field Handling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Support for list and string formats"}),"\n",(0,s.jsx)(n.li,{children:"Consistent tag retrieval"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"findings",children:"Findings"}),"\n",(0,s.jsx)(n.p,{children:"The tests verified the library works as expected for enterprise search scenarios:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Search Functionality"}),": Basic and boolean search work reliably"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Document Retrieval"}),": Documents are indexed and retrieved correctly"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"QueryBuilder"}),": The builder API provides a useful abstraction for boolean queries"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Metadata Handling"}),": Tags and other metadata are properly preserved"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Result Limiting"}),": The limit parameter works as expected"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Batch Operations"}),": The library handles batched document additions efficiently"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Areas for potential enhancement:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Advanced Query Operators"}),": Adding NOT operators and better parentheses support"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Field-Specific Search"}),": Improving the ability to search within specific fields"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"More Metadata Types"}),": Adding support for date ranges and numeric comparisons"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Faceted Navigation"}),": Native support for facet counting and navigation"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"sample-code",children:"Sample Code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Create an enterprise index\nindex = Index(\n    storage_path="/path/to/index",\n    in_memory=True,\n    schema=schema\n)\n\n# Add a document with metadata\nindex.add_document(\n    1, \n    "Document content...",\n    {\n        "title": "Document Title",\n        "tags": ["tag1", "tag2", "tag3"],\n        "author": "Author Name",\n        "department": "Department Name",\n        "priority": "high",\n        "status": "published"\n    }\n)\n\n# Simple search\nresults = index.search("search terms")\n\n# Boolean search\nresults = index.search("term1 AND term2")\nresults = index.search("term1 OR term2")\n\n# Search with field boosting\nresults = index.search("term", boost_fields={"title": 3.0})\n\n# Search with result limiting  \nresults = index.search("term", limit=10)\n\n# Query builder for programmatic queries\nbuilder = QueryBuilder(index)\nbuilder.add_term("term1")\nbuilder.add_term("term2") \nresults = builder.build_and_query()\n'})}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"The Fast Inverted Index library provides robust functionality for enterprise search applications. It offers good performance, reliable query operations, and proper metadata handling. The tests demonstrate its suitability for building search functionality in business applications with diverse document types and complex metadata."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);