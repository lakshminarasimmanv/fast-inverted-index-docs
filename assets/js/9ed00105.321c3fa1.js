"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3873],{8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},8730:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"configuration","title":"Configuration","description":"Fast-Inverted-Index provides multiple ways to configure the index to suit different use cases and performance requirements. This guide covers the available configuration options and demonstrates how to use them effectively.","source":"@site/docs/configuration.md","sourceDirName":".","slug":"/configuration","permalink":"/fast-inverted-index-docs/docs/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/username/fast-inverted-index/tree/main/docusaurus/docs/configuration.md","tags":[],"version":"current","frontMatter":{"id":"configuration","title":"Configuration","sidebar_label":"Configuration"},"sidebar":"docs","previous":{"title":"Text Field Search","permalink":"/fast-inverted-index-docs/docs/text-field-search"},"next":{"title":"LTR","permalink":"/fast-inverted-index-docs/docs/ltr"}}');var r=i(4848),s=i(8453);const o={id:"configuration",title:"Configuration",sidebar_label:"Configuration"},d="Configuration Options",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"Core Parameters",id:"core-parameters",level:3},{value:"Dictionary Configuration",id:"dictionary-configuration",level:3},{value:"Configuration in Python",id:"configuration-in-python",level:2},{value:"Basic Constructor",id:"basic-constructor",level:3},{value:"Builder Pattern",id:"builder-pattern",level:3},{value:"Configuration Objects",id:"configuration-objects",level:3},{value:"Configuration in Rust",id:"configuration-in-rust",level:2},{value:"Basic Construction with IndexBuilder",id:"basic-construction-with-indexbuilder",level:3},{value:"With Dictionary Configuration",id:"with-dictionary-configuration",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Example Configurations",id:"example-configurations",level:2},{value:"Small In-Memory Search Engine",id:"small-in-memory-search-engine",level:3},{value:"Large Document Repository",id:"large-document-repository",level:3},{value:"Autocomplete-Optimized",id:"autocomplete-optimized",level:3},{value:"Multi-Core System Optimization",id:"multi-core-system-optimization",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"configuration-options",children:"Configuration Options"})}),"\n",(0,r.jsx)(n.p,{children:"Fast-Inverted-Index provides multiple ways to configure the index to suit different use cases and performance requirements. This guide covers the available configuration options and demonstrates how to use them effectively."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"There are three main approaches to configuring the index:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Basic Constructor"}),": Simple and convenient for common scenarios"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Builder Pattern"}),": Fluent API for complex configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration Objects"}),": Fine-grained control over all aspects"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"core-parameters",children:"Core Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Impact"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"storage_path"})}),(0,r.jsx)(n.td,{children:"Path to store index files"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"index"'})}),(0,r.jsx)(n.td,{children:"Storage location"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"in_memory"})}),(0,r.jsx)(n.td,{children:"Whether to use in-memory mode"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Persistence vs. speed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"cache_size"})}),(0,r.jsx)(n.td,{children:"Number of items in LRU cache"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"10,000"})}),(0,r.jsx)(n.td,{children:"Memory usage vs. speed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"cache_ttl_secs"})}),(0,r.jsx)(n.td,{children:"Time-to-live for cache in seconds"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"3,600"})}),(0,r.jsx)(n.td,{children:"Cache freshness"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"store_positions"})}),(0,r.jsx)(n.td,{children:"Whether to store term positions"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})}),(0,r.jsx)(n.td,{children:"Index size vs. features"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"max_suggestions"})}),(0,r.jsx)(n.td,{children:"Max number of term suggestions"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"10"})}),(0,r.jsx)(n.td,{children:"Suggestion quality"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"suggestion_max_distance"})}),(0,r.jsx)(n.td,{children:"Max edit distance for suggestions"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"2"})}),(0,r.jsx)(n.td,{children:"Fuzzy matching range"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"compact_on_close"})}),(0,r.jsx)(n.td,{children:"Whether to compact storage on close"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})}),(0,r.jsx)(n.td,{children:"Shutdown time vs. storage optimization"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"dictionary-configuration",children:"Dictionary Configuration"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Impact"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"hot_terms_capacity"})}),(0,r.jsx)(n.td,{children:"Maximum number of terms in hot layer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"10,000"})}),(0,r.jsx)(n.td,{children:"Memory usage vs. lookup speed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"hot_promotion_threshold"})}),(0,r.jsx)(n.td,{children:"Access count to promote to hot layer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"100"})}),(0,r.jsx)(n.td,{children:"Term promotion aggressiveness"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"hot_demotion_threshold"})}),(0,r.jsx)(n.td,{children:"Access count below which hot terms are demoted"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"10"})}),(0,r.jsx)(n.td,{children:"Term demotion aggressiveness"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"medium_promotion_threshold"})}),(0,r.jsx)(n.td,{children:"Access count to promote from cold to medium"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"5"})}),(0,r.jsx)(n.td,{children:"Term promotion aggressiveness"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"medium_demotion_threshold"})}),(0,r.jsx)(n.td,{children:"Access count below which medium terms are demoted"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"1"})}),(0,r.jsx)(n.td,{children:"Term demotion aggressiveness"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"optimization_interval_secs"})}),(0,r.jsx)(n.td,{children:"Seconds between optimization runs"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"3600"})}),(0,r.jsx)(n.td,{children:"Dictionary adaptation frequency"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-in-python",children:"Configuration in Python"}),"\n",(0,r.jsx)(n.h3,{id:"basic-constructor",children:"Basic Constructor"}),"\n",(0,r.jsx)(n.p,{children:"The simplest way to configure the index is through the constructor:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fast_inverted_index import Index\n\n# Create with default settings\nindex = Index()\n\n# Create with custom settings\nindex = Index(\n    storage_path="/path/to/index",\n    cache_size=100000,\n    cache_ttl_secs=3600,\n    store_positions=True,\n    in_memory=False,\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"builder-pattern",children:"Builder Pattern"}),"\n",(0,r.jsx)(n.p,{children:"For more complex configuration, use the builder pattern:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fast_inverted_index import Index, DictionaryConfig\n\n# Create a builder\nbuilder = Index.builder()\n\n# Configure the index\nbuilder.with_storage_path("/path/to/index")\nbuilder.with_cache_size(100000) \nbuilder.with_cache_ttl_secs(3600)\nbuilder.with_store_positions(True)\nbuilder.with_in_memory(False)\nbuilder.with_max_suggestions(20)\nbuilder.with_suggestion_max_distance(2)\nbuilder.with_compact_on_close(True)\n\n# Configure dictionary if needed\ndict_config = DictionaryConfig(\n    hot_terms_capacity=5000,\n    hot_promotion_threshold=50,\n    medium_promotion_threshold=3,\n    optimization_interval_secs=1800\n)\nbuilder.with_dictionary_config(dict_config)\n\n# Build the index\nindex = builder.build()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"configuration-objects",children:"Configuration Objects"}),"\n",(0,r.jsx)(n.p,{children:"You can also use the configuration objects directly:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fast_inverted_index import Index, IndexConfig, DictionaryConfig\n\n# Create dictionary configuration\ndict_config = DictionaryConfig(\n    hot_terms_capacity=5000,\n    hot_promotion_threshold=50,\n    medium_promotion_threshold=3,\n    optimization_interval_secs=1800\n)\n\n# Create index configuration\nconfig = IndexConfig(\n    storage_path="/path/to/index",\n    cache_size=100000,\n    cache_ttl_secs=3600,\n    store_positions=True,\n    in_memory=False,\n    max_suggestions=20,\n    suggestion_max_distance=2,\n    compact_on_close=True,\n    dictionary_config=dict_config\n)\n\n# Create index with config\nindex = Index.with_config(config)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-in-rust",children:"Configuration in Rust"}),"\n",(0,r.jsx)(n.h3,{id:"basic-construction-with-indexbuilder",children:"Basic Construction with IndexBuilder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'use fast_inverted_index::{IndexBuilder, Index};\nuse std::time::Duration;\n\n// Create with builder (recommended approach)\nlet index = IndexBuilder::new()\n    .with_storage_path("/path/to/index")\n    .with_cache_size(100_000)\n    .with_cache_ttl(Duration::from_secs(3600))\n    .with_store_positions(true)\n    .with_in_memory(false)\n    .with_max_suggestions(20)\n    .with_suggestion_max_distance(2)\n    .with_compact_on_close(true)\n    .build()?;\n'})}),"\n",(0,r.jsx)(n.h3,{id:"with-dictionary-configuration",children:"With Dictionary Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'use fast_inverted_index::{IndexBuilder, Index, dictionary::HybridDictionaryConfig};\nuse std::time::Duration;\n\n// Create dictionary configuration\nlet dict_config = HybridDictionaryConfig {\n    hot_terms_capacity: 5000,\n    hot_promotion_threshold: 50,\n    hot_demotion_threshold: 10,\n    medium_promotion_threshold: 3,\n    medium_demotion_threshold: 1,\n    optimization_interval_secs: 1800,\n};\n\n// Use in builder\nlet index = IndexBuilder::new()\n    .with_storage_path("/path/to/index")\n    .with_cache_size(100_000)\n    .with_dictionary_config(dict_config)\n    .build()?;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Memory-Sensitive Environments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Reduce ",(0,r.jsx)(n.code,{children:"cache_size"})]}),"\n",(0,r.jsxs)(n.li,{children:["Reduce ",(0,r.jsx)(n.code,{children:"hot_terms_capacity"})]}),"\n",(0,r.jsxs)(n.li,{children:["Use persistent storage (set ",(0,r.jsx)(n.code,{children:"in_memory=false"}),")"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Performance-Critical Applications"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Increase ",(0,r.jsx)(n.code,{children:"cache_size"})]}),"\n",(0,r.jsxs)(n.li,{children:["Increase ",(0,r.jsx)(n.code,{children:"hot_terms_capacity"})]}),"\n",(0,r.jsx)(n.li,{children:"Consider in-memory mode for small-to-medium datasets"}),"\n",(0,r.jsx)(n.li,{children:"Adjust dictionary thresholds for your access patterns"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Balanced Approach"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use default settings as a starting point"}),"\n",(0,r.jsx)(n.li,{children:"Benchmark with your specific workload"}),"\n",(0,r.jsx)(n.li,{children:"Incrementally adjust parameters based on observed performance"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Suggestion Quality"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Increase ",(0,r.jsx)(n.code,{children:"max_suggestions"})," for more comprehensive autocomplete"]}),"\n",(0,r.jsxs)(n.li,{children:["Adjust ",(0,r.jsx)(n.code,{children:"suggestion_max_distance"})," for fuzzy matching tolerance"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-configurations",children:"Example Configurations"}),"\n",(0,r.jsx)(n.h3,{id:"small-in-memory-search-engine",children:"Small In-Memory Search Engine"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# For small datasets (e.g., < 100K documents)\nindex = Index(in_memory=True, cache_size=5000)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"large-document-repository",children:"Large Document Repository"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# For large datasets with optimal memory usage\nbuilder = Index.builder()\nbuilder.with_storage_path("/path/to/large_index")\nbuilder.with_cache_size(500000)\nbuilder.with_cache_ttl_secs(1800)  # Shorter TTL for freshness\nbuilder.with_store_positions(False)  # Save space if phrase queries aren\'t needed\nindex = builder.build()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"autocomplete-optimized",children:"Autocomplete-Optimized"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# For search with heavy autocomplete usage\ndict_config = DictionaryConfig(\n    hot_terms_capacity=20000,  # More terms in hot layer\n    hot_promotion_threshold=30,  # Easier promotion to hot layer\n    medium_promotion_threshold=2  # Easier promotion to medium layer\n)\n\nbuilder = Index.builder()\nbuilder.with_max_suggestions(30)  # More suggestions\nbuilder.with_suggestion_max_distance(3)  # More fuzzy matching tolerance\nbuilder.with_dictionary_config(dict_config)\nindex = builder.build()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"multi-core-system-optimization",children:"Multi-Core System Optimization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# For systems with many CPU cores (8+)\nindex = Index(\n    cache_size=1000000,  # Very large cache\n    in_memory=True\n)\n\n# Index documents in parallel\ndocuments = [(i, f"Document {i} content") for i in range(10000)]\nindex.add_documents_parallel(\n    documents, \n    num_threads=None,  # Auto-detect core count\n    batch_size=500\n)\n'})}),"\n",(0,r.jsx)(n.p,{children:"By carefully configuring your index based on your specific requirements, you can achieve significant performance improvements and better search functionality."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);