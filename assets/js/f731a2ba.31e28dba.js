"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9004],{7136:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"architecture-overview","title":"Architecture Overview","description":"Version 0.4.6","source":"@site/docs/architecture_overview.md","sourceDirName":".","slug":"/architecture-overview","permalink":"/fast-inverted-index-docs/docs/architecture-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/username/fast-inverted-index/tree/main/docusaurus/docs/architecture_overview.md","tags":[],"version":"current","frontMatter":{"id":"architecture-overview","title":"Architecture Overview","sidebar_label":"Architecture Overview"},"sidebar":"docs","previous":{"title":"architecture","permalink":"/fast-inverted-index-docs/docs/architecture"},"next":{"title":"Hybrid Dictionary","permalink":"/fast-inverted-index-docs/docs/hybrid-dictionary"}}');var s=i(4848),l=i(8453);const t={id:"architecture-overview",title:"Architecture Overview",sidebar_label:"Architecture Overview"},c="Fast Inverted Index: Architectural Overview",d={},o=[{value:"Introduction",id:"introduction",level:2},{value:"System Architecture",id:"system-architecture",level:2},{value:"High-Level Components",id:"high-level-components",level:3},{value:"Core Components",id:"core-components",level:3},{value:"Data Structures",id:"data-structures",level:2},{value:"Hybrid Dictionary",id:"hybrid-dictionary",level:3},{value:"Skip Lists",id:"skip-lists",level:3},{value:"Compressed Storage",id:"compressed-storage",level:3},{value:"Query Execution",id:"query-execution",level:2},{value:"Query Processing Flow",id:"query-processing-flow",level:3},{value:"Boolean Operations",id:"boolean-operations",level:3},{value:"Scoring Algorithms",id:"scoring-algorithms",level:3},{value:"Memory Management",id:"memory-management",level:2},{value:"Memory Architecture",id:"memory-architecture",level:3},{value:"Memory Optimization Techniques",id:"memory-optimization-techniques",level:3},{value:"Search Performance Characteristics",id:"search-performance-characteristics",level:2},{value:"Performance Metrics",id:"performance-metrics",level:3},{value:"Performance Benchmarks",id:"performance-benchmarks",level:3},{value:"Thread Safety Implementation",id:"thread-safety-implementation",level:2},{value:"Thread-Safe Components",id:"thread-safe-components",level:3},{value:"Locking Strategy",id:"locking-strategy",level:3},{value:"Document Storage Architecture",id:"document-storage-architecture",level:2},{value:"Content Storage Patterns",id:"content-storage-patterns",level:3},{value:"Content Retrieval Flow",id:"content-retrieval-flow",level:3},{value:"Field-Specific Search",id:"field-specific-search",level:2},{value:"Schema Implementation",id:"schema-implementation",level:3},{value:"Multi-Field Indexing",id:"multi-field-indexing",level:3},{value:"Python Bindings Architecture",id:"python-bindings-architecture",level:2},{value:"PyO3 Integration",id:"pyo3-integration",level:3},{value:"Type Conversion System",id:"type-conversion-system",level:3},{value:"Key Design Decisions and Tradeoffs",id:"key-design-decisions-and-tradeoffs",level:2},{value:"1. Hybrid Dictionary vs. Pure Implementations",id:"1-hybrid-dictionary-vs-pure-implementations",level:3},{value:"2. Skip Lists vs. Other Posting List Structures",id:"2-skip-lists-vs-other-posting-list-structures",level:3},{value:"3. Field-Specific Indexing vs. Global Index",id:"3-field-specific-indexing-vs-global-index",level:3},{value:"4. Content Storage Separation",id:"4-content-storage-separation",level:3},{value:"5. RocksDB for Persistence",id:"5-rocksdb-for-persistence",level:3},{value:"Future Directions",id:"future-directions",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2}];function a(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"fast-inverted-index-architectural-overview",children:"Fast Inverted Index: Architectural Overview"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Version 0.4.6"})}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(n.p,{children:"This document provides a comprehensive architectural overview of the Fast Inverted Index library, including its system design, implementation details, performance characteristics, and engineering decisions. It is intended for developers, architects, and system designers who want to understand how the library works internally, as well as those evaluating it for production use."}),"\n",(0,s.jsx)(n.h2,{id:"system-architecture",children:"System Architecture"}),"\n",(0,s.jsx)(n.p,{children:"Fast Inverted Index follows a layered architecture with clean separation of concerns between components. The system is designed to be:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Modular"}),": Components can be replaced or extended independently"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Efficient"}),": Optimized for both search performance and memory usage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Thread-safe"}),": Supporting concurrent operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scalable"}),": Handling large document collections"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extensible"}),": Supporting new ranking algorithms and query types"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"high-level-components",children:"High-Level Components"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                       Public API Layer                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   Indexing    \u2502    Query      \u2502    Schema     \u2502   Dictionary  \u2502\n\u2502   Subsystem   \u2502   Engine      \u2502   Management  \u2502   Management  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                    Core Data Structures                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Inverted     \u2502   Skip        \u2502  Compression  \u2502     Cache     \u2502\n\u2502   Index       \u2502   Lists       \u2502    Engine     \u2502    Manager    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502          Memory Management Layer              \u2502  Persistence  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \u2502\n                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                        \u2502   RocksDB     \u2502\n                        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"core-components",children:"Core Components"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Index"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Central component that orchestrates operations"}),"\n",(0,s.jsx)(n.li,{children:"Manages document addition, deletion, and updates"}),"\n",(0,s.jsx)(n.li,{children:"Coordinates query execution"}),"\n",(0,s.jsx)(n.li,{children:"Handles memory management"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Dictionary"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Maps terms to posting lists"}),"\n",(0,s.jsx)(n.li,{children:"Implements the hybrid dictionary pattern"}),"\n",(0,s.jsx)(n.li,{children:"Provides term statistics and suggestions"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Posting Lists"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stores document IDs for each term"}),"\n",(0,s.jsx)(n.li,{children:"Implements skip list optimization for efficient traversal"}),"\n",(0,s.jsx)(n.li,{children:"Supports compressed storage"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Query Engine"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Parses and analyzes queries"}),"\n",(0,s.jsx)(n.li,{children:"Builds execution plans"}),"\n",(0,s.jsx)(n.li,{children:"Executes queries across posting lists"}),"\n",(0,s.jsx)(n.li,{children:"Scores and ranks results"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Schema Management"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Defines field types and their behaviors"}),"\n",(0,s.jsx)(n.li,{children:"Manages analyzers and tokenization"}),"\n",(0,s.jsx)(n.li,{children:"Handles field-specific configurations"}),"\n",(0,s.jsx)(n.li,{children:"Supports serialization and deserialization"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Storage Layer"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Abstracts persistent storage operations"}),"\n",(0,s.jsx)(n.li,{children:"Implements RocksDB-based storage"}),"\n",(0,s.jsx)(n.li,{children:"Handles serialization/deserialization"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-structures",children:"Data Structures"}),"\n",(0,s.jsx)(n.h3,{id:"hybrid-dictionary",children:"Hybrid Dictionary"}),"\n",(0,s.jsx)(n.p,{children:"The hybrid dictionary is a core innovation in Fast Inverted Index. It improves lookup performance by categorizing terms based on their frequency:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                       Hybrid Dictionary                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      Hot Terms        \u2502   Medium Terms    \u2502    Cold Terms     \u2502\n\u2502  (High Frequency)     \u2502 (Medium Frequency)\u2502  (Low Frequency)  \u2502\n\u2502                       \u2502                   \u2502                   \u2502\n\u2502  In-memory HashMap    \u2502  Radix Trie       \u2502  Persistent Store \u2502\n\u2502  Lowest latency       \u2502  Space-efficient  \u2502  Storage-efficient\u2502\n\u2502  Access: O(1)         \u2502  Access: O(k)     \u2502  Access: O(log n) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.p,{children:"Terms dynamically move between tiers based on their access frequency:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Hot terms move to cold when rarely accessed (demotion)"}),"\n",(0,s.jsx)(n.li,{children:"Cold terms move to hot when frequently accessed (promotion)"}),"\n",(0,s.jsx)(n.li,{children:"Optimizations run periodically to balance the tiers"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"skip-lists",children:"Skip Lists"}),"\n",(0,s.jsx)(n.p,{children:"The library uses skip lists to optimize posting list traversal during query execution:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Level 3:  1 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba 47\nLevel 2:  1 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba 21 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba 47\nLevel 1:  1 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba 11 \u2500\u2500\u2500\u2500\u2500\u25ba 21 \u2500\u2500\u2500\u25ba 36 \u2500\u2500\u2500\u2500\u2500\u25ba 47\nBase:     1 \u2500\u25ba 5 \u2500\u25ba 11 \u2500\u25ba 16 \u2500\u25ba 21 \u2500\u25ba 27 \u2500\u25ba 36 \u2500\u25ba 47\n"})}),"\n",(0,s.jsx)(n.p,{children:"Skip list properties:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Average search time: O(log n)"}),"\n",(0,s.jsx)(n.li,{children:"Space overhead: O(n)"}),"\n",(0,s.jsx)(n.li,{children:"Configured with optimal skip distances"}),"\n",(0,s.jsx)(n.li,{children:"Level count adapts to list length"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"compressed-storage",children:"Compressed Storage"}),"\n",(0,s.jsx)(n.p,{children:"Posting lists are compressed using variable-length integer coding:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Integers close to zero use fewer bytes"}),"\n",(0,s.jsx)(n.li,{children:"Delta encoding between consecutive IDs reduces magnitude"}),"\n",(0,s.jsx)(n.li,{children:"Improves cache efficiency and reduces I/O"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Original posting list: [1, 5, 11, 16, 21, 27, 36, 47]\nDelta-encoded:         [1, 4, 6,  5,  5,  6,  9,  11]\nVarInt-compressed:     [1, 4, 6,  5,  5,  6,  9,  11]\n                        \u2502  \u2502  \u2502   \u2502   \u2502   \u2502   \u2502   \u2514\u2500 1 byte\n                        \u2514\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500 1 byte each\n"})}),"\n",(0,s.jsx)(n.h2,{id:"query-execution",children:"Query Execution"}),"\n",(0,s.jsx)(n.h3,{id:"query-processing-flow",children:"Query Processing Flow"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Parse      \u2502     \u2502  Plan       \u2502     \u2502  Execute    \u2502\n\u2502  Query      \u2502\u2500\u2500\u2500\u2500\u25ba\u2502  Generation \u2502\u2500\u2500\u2500\u2500\u25ba\u2502  Query      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                               \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Format     \u2502     \u2502  Score      \u2502     \u2502  Retrieve  \u2502\n\u2502  Results    \u2502\u25c4\u2500\u2500\u2500\u2500\u2502  Results    \u2502\u25c4\u2500\u2500\u2500\u2500\u2502  Postings  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parse Query"}),": Convert string query to structured representation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Plan Generation"}),": Determine optimal execution strategy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Execute Query"}),": Traverse posting lists using set operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Retrieve Postings"}),": Fetch document IDs with field info"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Score Results"}),": Apply ranking algorithm and boost factors"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Format Results"}),": Prepare for return to client"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"boolean-operations",children:"Boolean Operations"}),"\n",(0,s.jsx)(n.p,{children:"Set operations are implemented with optimized algorithms:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"AND"}),": Intersects multiple posting lists"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"A: [1, 5, 11, 16, 21, 27, 36, 47]\nB: [5, 11, 21, 36, 92]\nA \u2229 B = [5, 11, 21, 36]\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"OR"}),": Unions multiple posting lists"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"A: [1, 5, 11, 16, 21, 27, 36, 47]\nB: [5, 11, 21, 36, 92]\nA \u222a B = [1, 5, 11, 16, 21, 27, 36, 47, 92]\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"NOT"}),": Implemented as filtered traversal, not pure set difference"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"scoring-algorithms",children:"Scoring Algorithms"}),"\n",(0,s.jsx)(n.p,{children:"The library implements multiple scoring algorithms:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"TF-IDF (Term Frequency-Inverse Document Frequency)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Classic algorithm balancing term frequency and rarity"}),"\n",(0,s.jsx)(n.li,{children:"Score = tf \xd7 idf"}),"\n",(0,s.jsxs)(n.li,{children:["Where:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"tf = term frequency in document"}),"\n",(0,s.jsx)(n.li,{children:"idf = log(N/df), where N = total docs, df = docs with term"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"BM25 (Best Matching 25)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Extension of TF-IDF that handles document length"}),"\n",(0,s.jsx)(n.li,{children:"Score = idf \xd7 (tf \xd7 (k1 + 1)) / (tf + k1 \xd7 (1 - b + b \xd7 dl/avgdl))"}),"\n",(0,s.jsxs)(n.li,{children:["Where:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"k1 = term frequency saturation (default: 1.2)"}),"\n",(0,s.jsx)(n.li,{children:"b = document length normalization (default: 0.75)"}),"\n",(0,s.jsx)(n.li,{children:"dl = document length, avgdl = average document length"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"BM25L"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Improved BM25 that handles short documents better"}),"\n",(0,s.jsx)(n.li,{children:"Addresses BM25's bias against very short documents"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Learning to Rank (LTR)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Combines multiple scoring signals"}),"\n",(0,s.jsx)(n.li,{children:"Customizable feature weights"}),"\n",(0,s.jsx)(n.li,{children:"Supports runtime model adjustments"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"memory-management",children:"Memory Management"}),"\n",(0,s.jsx)(n.h3,{id:"memory-architecture",children:"Memory Architecture"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  In-Memory    \u2502     \u2502   Managed     \u2502     \u2502   Persistent  \u2502\n\u2502  Structures   \u2502     \u2502   Cache       \u2502     \u2502   Storage     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502                     \u2502                     \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Dictionary   \u2502     \u2502  LRU Cache    \u2502     \u2502   RocksDB     \u2502\n\u2502  - Hot Terms  \u2502     \u2502 - TTL-based   \u2502     \u2502  - Terms      \u2502\n\u2502  - Med Terms  \u2502     \u2502 - Size-limited\u2502     \u2502  - Postings   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"memory-optimization-techniques",children:"Memory Optimization Techniques"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"LRU Cache with TTL"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Time-based eviction (default: 300s)"}),"\n",(0,s.jsx)(n.li,{children:"Size-limited (configurable)"}),"\n",(0,s.jsx)(n.li,{children:"Prunes stale entries"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Incremental Memory Cleanup"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"manage_memory()"})," method for explicit control"]}),"\n",(0,s.jsx)(n.li,{children:"Triggered automatically on thresholds"}),"\n",(0,s.jsx)(n.li,{children:"Prioritizes high-impact cleanup operations"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Hot/Medium/Cold Tier Balancing"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Dynamic promotion/demotion based on access patterns"}),"\n",(0,s.jsx)(n.li,{children:"Periodic optimization (default: every 60s)"}),"\n",(0,s.jsx)(n.li,{children:"Configurable thresholds"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compression"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Variable-length integer encoding"}),"\n",(0,s.jsx)(n.li,{children:"Delta encoding of posting lists"}),"\n",(0,s.jsx)(n.li,{children:"Batch compression of related structures"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"search-performance-characteristics",children:"Search Performance Characteristics"}),"\n",(0,s.jsx)(n.h3,{id:"performance-metrics",children:"Performance Metrics"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Operation"}),(0,s.jsx)(n.th,{children:"Time Complexity"}),(0,s.jsx)(n.th,{children:"Space Complexity"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Term Lookup"}),(0,s.jsx)(n.td,{children:"O(1) hot, O(k) medium, O(log n) cold"}),(0,s.jsx)(n.td,{children:"O(n)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Boolean AND"}),(0,s.jsx)(n.td,{children:"O(m log(n/m)) where m = smallest list"}),(0,s.jsx)(n.td,{children:"O(min(results))"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Boolean OR"}),(0,s.jsx)(n.td,{children:"O(n+m) where n,m = list sizes"}),(0,s.jsx)(n.td,{children:"O(n+m)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Document Addition"}),(0,s.jsx)(n.td,{children:"O(t) where t = terms in doc"}),(0,s.jsx)(n.td,{children:"O(t)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Index Optimization"}),(0,s.jsx)(n.td,{children:"O(n log n) where n = terms"}),(0,s.jsx)(n.td,{children:"O(n)"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"performance-benchmarks",children:"Performance Benchmarks"}),"\n",(0,s.jsx)(n.p,{children:"Measured on standard hardware (8-core CPU, 16GB RAM, SSD):"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Collection Size"}),(0,s.jsx)(n.th,{children:"Operation"}),(0,s.jsx)(n.th,{children:"Throughput"}),(0,s.jsx)(n.th,{children:"Latency p99"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"100K documents"}),(0,s.jsx)(n.td,{children:"Term query"}),(0,s.jsx)(n.td,{children:"5,200/s"}),(0,s.jsx)(n.td,{children:"3.1ms"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"100K documents"}),(0,s.jsx)(n.td,{children:"2-term AND"}),(0,s.jsx)(n.td,{children:"3,800/s"}),(0,s.jsx)(n.td,{children:"4.7ms"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"100K documents"}),(0,s.jsx)(n.td,{children:"3-term OR"}),(0,s.jsx)(n.td,{children:"2,900/s"}),(0,s.jsx)(n.td,{children:"6.2ms"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"1M documents"}),(0,s.jsx)(n.td,{children:"Term query"}),(0,s.jsx)(n.td,{children:"4,100/s"}),(0,s.jsx)(n.td,{children:"4.9ms"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"1M documents"}),(0,s.jsx)(n.td,{children:"2-term AND"}),(0,s.jsx)(n.td,{children:"2,700/s"}),(0,s.jsx)(n.td,{children:"8.3ms"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"1M documents"}),(0,s.jsx)(n.td,{children:"3-term OR"}),(0,s.jsx)(n.td,{children:"1,900/s"}),(0,s.jsx)(n.td,{children:"12.1ms"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"10M documents"}),(0,s.jsx)(n.td,{children:"Term query"}),(0,s.jsx)(n.td,{children:"2,800/s"}),(0,s.jsx)(n.td,{children:"12.6ms"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"10M documents"}),(0,s.jsx)(n.td,{children:"2-term AND"}),(0,s.jsx)(n.td,{children:"1,500/s"}),(0,s.jsx)(n.td,{children:"23.4ms"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"10M documents"}),(0,s.jsx)(n.td,{children:"3-term OR"}),(0,s.jsx)(n.td,{children:"920/s"}),(0,s.jsx)(n.td,{children:"38.7ms"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"thread-safety-implementation",children:"Thread Safety Implementation"}),"\n",(0,s.jsx)(n.h3,{id:"thread-safe-components",children:"Thread-Safe Components"}),"\n",(0,s.jsx)(n.p,{children:"Fast Inverted Index v0.4.6 implements comprehensive thread safety for all operations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Index Operations"}),": Protected with read-write locks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cache Access"}),": Thread-safe with atomic operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Query Execution"}),": Immutable or thread-local state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dictionary Access"}),": Lock-free reads, coordinated writes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Python Bindings"}),": GIL-aware thread safety"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"locking-strategy",children:"Locking Strategy"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                      Operation Types                          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      Read-Only        \u2502  Read-Mostly      \u2502   Write-Heavy     \u2502\n\u2502  (Search/Query)       \u2502 (Get Document)    \u2502  (Add/Update)     \u2502\n\u2502                       \u2502                   \u2502                   \u2502\n\u2502  Lock-free            \u2502  Shared locks     \u2502  Exclusive locks  \u2502\n\u2502  High concurrency     \u2502 Medium concurrency\u2502  Serialized       \u2502\n\u2502                       \u2502                   \u2502                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Multi-tier Approach"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Fine-grained locks for specific structures"}),"\n",(0,s.jsx)(n.li,{children:"Coarse-grained locks for complex operations"}),"\n",(0,s.jsx)(n.li,{children:"Lock-free algorithms where possible"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Concurrent Readers"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Multiple readers permitted simultaneously"}),"\n",(0,s.jsx)(n.li,{children:"Read operations don't block other readers"}),"\n",(0,s.jsx)(n.li,{children:"Optimistic concurrency control"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arc-RwLock Pattern"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Atomic reference counting for shared ownership"}),"\n",(0,s.jsx)(n.li,{children:"Read-write locks for mutation control"}),"\n",(0,s.jsx)(n.li,{children:"Zero-cost abstraction in Rust"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Python Binding Safety"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Thread-safety preserved across language boundary"}),"\n",(0,s.jsx)(n.li,{children:"Handle PyO3 GIL considerations"}),"\n",(0,s.jsx)(n.li,{children:"Safe drop implementation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"document-storage-architecture",children:"Document Storage Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"content-storage-patterns",children:"Content Storage Patterns"}),"\n",(0,s.jsx)(n.p,{children:"Fast Inverted Index separates content storage from search functionality, with RocksDB used exclusively for inverted index storage, not document content:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502     Search Engine       \u2502               \u2502     Content Store       \u2502\n\u2502  (Fast Inverted Index)  \u2502               \u2502  (Redis, MongoDB, etc.) \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524               \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  - Term dictionary      \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502  - Full document content\u2502\n\u2502  - Posting lists        \u2502           \u2502   \u2502  - Rich metadata        \u2502\n\u2502  - Document metadata    \u2502           \u2502   \u2502  - Binary attachments   \u2502\n\u2502  - Scoring algorithms   \u2502           \u2502   \u2502  - Version history      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                      \u2502\n                              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                              \u2502 Application Layer \u2502\n                              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"content-retrieval-flow",children:"Content Retrieval Flow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Document Indexing"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Parse document into terms"}),"\n",(0,s.jsx)(n.li,{children:"Store terms in inverted index"}),"\n",(0,s.jsx)(n.li,{children:"Keep minimal metadata in index"}),"\n",(0,s.jsx)(n.li,{children:"Store full content in external database"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Search Processing"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Query matching documents in index"}),"\n",(0,s.jsx)(n.li,{children:"Retrieve document IDs and scores"}),"\n",(0,s.jsx)(n.li,{children:"Pass IDs to content store"}),"\n",(0,s.jsx)(n.li,{children:"Fetch full content by ID"}),"\n",(0,s.jsx)(n.li,{children:"Return enriched results"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Recommended Patterns"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use the same ID across both systems"}),"\n",(0,s.jsx)(n.li,{children:"Consider batched content retrieval"}),"\n",(0,s.jsx)(n.li,{children:"Implement appropriate caching"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"field-specific-search",children:"Field-Specific Search"}),"\n",(0,s.jsx)(n.h3,{id:"schema-implementation",children:"Schema Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                           Schema                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Field Types  \u2502   Analyzers   \u2502  Field Config \u2502  Default Field\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                      Field Definitions                        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.p,{children:"Field types:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Text"}),": Full-text fields with tokenization"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Keyword"}),": Exact-match fields without tokenization"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Numeric"}),": Integer or floating-point fields"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Date"}),": Timestamp or date fields"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Boolean"}),": True/false fields"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"multi-field-indexing",children:"Multi-Field Indexing"}),"\n",(0,s.jsx)(n.p,{children:"The index maintains separate inverted indices per field:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Title      \u2502     \u2502  Content    \u2502     \u2502  Tags       \u2502\n\u2502  Field Index\u2502     \u2502  Field Index\u2502     \u2502  Field Index\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2502                   \u2502                   \u2502\n      \u25bc                   \u25bc                   \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Term \u2192 DocIDs\u2502     \u2502Term \u2192 DocIDs\u2502     \u2502Term \u2192 DocIDs\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.p,{children:"Field-specific operations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Each field has its own analyzer configuration"}),"\n",(0,s.jsx)(n.li,{children:"Terms are indexed with field prefixes"}),"\n",(0,s.jsx)(n.li,{children:"Queries can target specific fields"}),"\n",(0,s.jsx)(n.li,{children:"Field-specific boosting is applied during scoring"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"python-bindings-architecture",children:"Python Bindings Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"pyo3-integration",children:"PyO3 Integration"}),"\n",(0,s.jsx)(n.p,{children:"Fast Inverted Index uses PyO3 for high-performance Python bindings:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                     Python Application                        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                               \u2502\n                               \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                     Python API Layer                          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                    PyO3 Interface Layer                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                      Rust Library Core                        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"type-conversion-system",children:"Type Conversion System"}),"\n",(0,s.jsx)(n.p,{children:"The library implements a robust type conversion system:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Python \u2192 Rust Conversion"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Field validation and normalization"}),"\n",(0,s.jsx)(n.li,{children:"List handling for tag fields"}),"\n",(0,s.jsx)(n.li,{children:"Type inference and coercion"}),"\n",(0,s.jsx)(n.li,{children:"Error handling with descriptive messages"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Rust \u2192 Python Conversion"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Metadata conversion to Python dictionaries"}),"\n",(0,s.jsx)(n.li,{children:"Tag field normalization to lists"}),"\n",(0,s.jsx)(n.li,{children:"Thread-safe reference handling"}),"\n",(0,s.jsx)(n.li,{children:"Memory management coordination"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"key-design-decisions-and-tradeoffs",children:"Key Design Decisions and Tradeoffs"}),"\n",(0,s.jsx)(n.h3,{id:"1-hybrid-dictionary-vs-pure-implementations",children:"1. Hybrid Dictionary vs. Pure Implementations"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Decision"}),": Implement a hybrid approach with three tiers."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Rationale"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Common terms benefit from hashmap performance"}),"\n",(0,s.jsx)(n.li,{children:"Rare terms benefit from storage efficiency"}),"\n",(0,s.jsx)(n.li,{children:"Dynamic promotion/demotion adapts to workload"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Tradeoff"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Additional complexity in dictionary management"}),"\n",(0,s.jsx)(n.li,{children:"Overhead of periodic tier re-balancing"}),"\n",(0,s.jsx)(n.li,{children:"Better overall performance across diverse workloads"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-skip-lists-vs-other-posting-list-structures",children:"2. Skip Lists vs. Other Posting List Structures"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Decision"}),": Use skip lists for posting list traversal."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Rationale"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Efficient intersection operations"}),"\n",(0,s.jsx)(n.li,{children:"Good cache locality"}),"\n",(0,s.jsx)(n.li,{children:"Simple implementation"}),"\n",(0,s.jsx)(n.li,{children:"Predictable performance"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Tradeoff"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Some space overhead for skip pointers"}),"\n",(0,s.jsx)(n.li,{children:"Not as space-efficient as bitmap representations for dense sets"}),"\n",(0,s.jsx)(n.li,{children:"Better query performance for typical workloads"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-field-specific-indexing-vs-global-index",children:"3. Field-Specific Indexing vs. Global Index"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Decision"}),": Maintain separate inverted indices per field."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Rationale"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Enables field-specific querying"}),"\n",(0,s.jsx)(n.li,{children:"Allows field-specific analyzers"}),"\n",(0,s.jsx)(n.li,{children:"Supports targeted boosting"}),"\n",(0,s.jsx)(n.li,{children:"Cleaner query semantics"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Tradeoff"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Increased index size"}),"\n",(0,s.jsx)(n.li,{children:"More complex query planning"}),"\n",(0,s.jsx)(n.li,{children:"Better search relevance and flexibility"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"4-content-storage-separation",children:"4. Content Storage Separation"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Decision"}),": Store only minimal metadata in the index."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Rationale"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Optimizes index for search operations"}),"\n",(0,s.jsx)(n.li,{children:"Allows specialized content storage"}),"\n",(0,s.jsx)(n.li,{children:"Reduces index size and memory pressure"}),"\n",(0,s.jsx)(n.li,{children:"Follows separation of concerns principle"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Tradeoff"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Requires separate content storage system"}),"\n",(0,s.jsx)(n.li,{children:"Additional complexity in application integration"}),"\n",(0,s.jsx)(n.li,{children:"Better scalability and specialized optimization"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"5-rocksdb-for-persistence",children:"5. RocksDB for Persistence"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Decision"}),": Use RocksDB for index persistence."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Rationale"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"High write throughput (LSM-tree)"}),"\n",(0,s.jsx)(n.li,{children:"Good read performance"}),"\n",(0,s.jsx)(n.li,{children:"Embedded database (no separate service)"}),"\n",(0,s.jsx)(n.li,{children:"Excellent compression"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Tradeoff"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Some complexity in configuration"}),"\n",(0,s.jsx)(n.li,{children:"Background compaction overhead"}),"\n",(0,s.jsx)(n.li,{children:"Better overall performance characteristics"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"future-directions",children:"Future Directions"}),"\n",(0,s.jsx)(n.p,{children:"Areas being considered for future development:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Query Parser Enhancements"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Support for parentheses in queries"}),"\n",(0,s.jsx)(n.li,{children:"Advanced query syntax"}),"\n",(0,s.jsx)(n.li,{children:"Prefix and wildcard queries"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Distributed Architecture"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Shard management"}),"\n",(0,s.jsx)(n.li,{children:"Query federation"}),"\n",(0,s.jsx)(n.li,{children:"Consensus algorithms"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Real-time Index Updates"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Incremental indexing improvements"}),"\n",(0,s.jsx)(n.li,{children:"Near-real-time search visibility"}),"\n",(0,s.jsx)(n.li,{children:"Transactional guarantees"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Additional Ranking Models"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Neural ranking models"}),"\n",(0,s.jsx)(n.li,{children:"More LTR features"}),"\n",(0,s.jsx)(n.li,{children:"Domain-specific algorithms"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Enhanced Text Analysis"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Improved tokenization"}),"\n",(0,s.jsx)(n.li,{children:"Stemming and lemmatization"}),"\n",(0,s.jsx)(n.li,{children:"Multilingual support"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"Fast Inverted Index is designed to be a high-performance, memory-efficient search engine library with clean separation of concerns and extensible architecture. Its design emphasizes practicality, offering a good balance between performance, feature richness, and usability."}),"\n",(0,s.jsx)(n.p,{children:"By separating index functionality from document storage and providing comprehensive Python bindings, the library serves as an excellent foundation for building search applications with modern requirements."}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Zobel, J., & Moffat, A. (2006). Inverted files for text search engines. ACM computing surveys (CSUR), 38(2), 6."}),"\n",(0,s.jsx)(n.li,{children:"B\xfcttcher, S., Clarke, C. L., & Cormack, G. V. (2016). Information retrieval: Implementing and evaluating search engines. MIT Press."}),"\n",(0,s.jsx)(n.li,{children:"Pugh, W. (1990). Skip lists: a probabilistic alternative to balanced trees. Communications of the ACM, 33(6), 668-676."}),"\n",(0,s.jsx)(n.li,{children:"Robertson, S. E., & Zaragoza, H. (2009). The probabilistic relevance framework: BM25 and beyond. Foundations and Trends in Information Retrieval, 3(4), 333-389."}),"\n",(0,s.jsx)(n.li,{children:"Lv, Y., & Zhai, C. (2011). Lower-bounding term frequency normalization. In Proceedings of the 20th ACM international conference on Information and knowledge management (pp. 7-16)."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var r=i(6540);const s={},l=r.createContext(s);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);